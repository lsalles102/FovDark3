MercadoPago is not defined
Mercado Pago SDK carregado com sucesso: class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};ls(this,ms,void 0),ls(this,fs,void 0),ls(this,gs,void 0),ls(this,ys,void 0),ls(this,ws,void 0),ls(this,bs,void 0),function(e,t,r){t=function(e){var t=function(e,t){if("object"!=typeof e||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:t+""}(t),t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r}(this,"fields",{create:(e,t)=>(c.setIframeEnabled(!0),ps(gs,this).fields.create(e,ps(ws,this),t)),createCardToken:async(e,t)=>{jn.send({path:"/core_methods/create_card_token",type:jn.TRACK_TYPE_EVENT,eventData:{is_iframe:c.getIframeEnabled()}});const r=this.formatTokenOptions(t);return ps(gs,this).fields.createCardToken(e,ps(ws,this),r)},updateCardToken:async(e,t)=>{jn.send({path:"/core_methods/update_card_token",type:jn.TRACK_TYPE_EVENT,eventData:{is_iframe:c.getIframeEnabled()}});const r=this.formatTokenOptions(t);return ps(gs,this).fields.updateCardToken(e,ps(ws,this),r)}}),ls(this,vs,(e=>{const t=(e=>{const t=typeof e;return"string"!==t?new Error(`MercadoPago.js - Type of public_key must be string. Received ${t}`):/\s/g.test(e)?new Error("MercadoPago.js - Your public_key is invalid, as it contains whitespaces."):void 0})(e);if(t)throw t})),ls(this,Es,(e=>{const t=(e=>{const t=new xn,{locale:r,advancedFraudPrevention:n}=e;if(r&&("string"!=typeof r&&t.addError({...ln.default,description:"Type of locale must be string. Received "+typeof r}),!Object.keys(i).includes(r))){let t=Object.keys(i).find((e=>e.toLowerCase().startsWith(r)));t=t?"es"===r.toLowerCase()?"es-CO":t:"en-US",e.locale=t,console.warn(`The requested language '${r}' is not supported, using the fallback language '${t}'.`)}return n&&"boolean"!=typeof n&&t.addError({...ln.default,description:"Type of advancedFraudPrevention must be boolean. Received "+typeof n}),t.getErrors()})(e);if(t.length)throw console.warn("MercadoPago.js - Invalid options: ",t),t.forEach((e=>{jn.sendError({type:jn.TRACK_TYPE_EVENT,eventData:{type:jn.ERROR_TYPE_INTEGRATION,origin:"Core.validateOptions",reason:e.description}})})),new Error("MercadoPago.js could not be loaded")})),ls(this,Ts,(e=>Object.assign({locale:In(),advancedFraudPrevention:!0,trackingDisabled:!1},e))),ls(this,_s,(async()=>{us(ys,this,new Kn),us(gs,this,new sn({services:ps(ys,this)})),await(async e=>{if(c.getSiteId())return;const t=c.getPublicKey(),r=(await e.getPaymentMethods({limit:1,public_key:t})).results.find((e=>e.site_id)),n=r?.site_id;n&&c.setSiteId(n)})(ps(ys,this)),await ps(ks,this).call(this),jn.setContext({siteId:c.getSiteId(),advancedFraudPrevention:ps(ms,this).advancedFraudPrevention,locale:ps(ms,this).locale,publicKey:c.getPublicKey(),version:r})})),ls(this,ks,(async()=>{try{return await new Promise(((e,t)=>{const n=window.navigator.userAgent||window.navigator.vendor,i=E(n),o=i?"sdk-js-checkout-mobile":"sdk-js-checkout-web",a=i?"BCLQ07IBVKH001FP9VCG":"BCHJ1GABVKH001FP9V4G",s=document.createElement("script");s.src="https://http2.mlstatic.com/storage/event-metrics-sdk/js",s.type="text/javascript",s.async=!0,s.setAttribute("data-client-info-name","MercadoPago-SDK-Javascript"),s.setAttribute("data-client-info-version",r),s.setAttribute("data-business-flow-name",o),s.setAttribute("data-business-flow-uid",a),s.setAttribute("data-event-info-name","checkout"),s.setAttribute("data-event-info-source",function(){const e=window.crypto||window.msCrypto;if(void 0===e||void 0===window.Uint32Array)return"";const t=new Uint32Array(8);e.getRandomValues(t);let r="";for(let e=0;e<t.length;e++)r+=(e<2||e>5?"":"-")+t[e].toString(16).slice(-4);return r}()),document.head.appendChild(s),s.onload=()=>e(),s.onerror=e=>t(e)})),Promise.resolve()}catch(e){return console.warn("MercadoPago.js - SRE Metrics could not be loaded",e),jn.sendError({type:jn.TRACK_TYPE_EVENT,eventData:{type:jn.ERROR_TYPE_WARNING,origin:"Core.setupMetricsSDK",reason:"SRE Metrics could not be loaded"}}),Promise.resolve()}})),ls(this,Cs,(async(e,t)=>{await ps(fs,this),ps(bs,this)||jn.send({path:`${e||""}`,type:jn.TRACK_TYPE_VIEW,eventData:t}),e&&us(bs,this,!0)})),ls(this,Ps,(async e=>{await ps(Cs,this).call(this,"/core_methods",{is_iframe:c.getIframeEnabled()}),jn.send({path:`/core_methods${e}`,type:jn.TRACK_TYPE_EVENT,eventData:{is_iframe:c.getIframeEnabled()}})})),ls(this,Ms,(async()=>{try{const{advancedFraudPrevention:e}=ps(ms,this);if(!e)return Promise.resolve();const t=await(async()=>{try{const e=await pe.fetch("/devices/widgets",{method:"POST",body:JSON.stringify({section:"open_platform_V2",view:"checkout"})}),t=await e.json(),r=document.createElement("script");return r.appendChild(document.createTextNode(t.widget.replace(/<script\b[^<]*">/gi,"").replace(/<\/script>[\s\S]*/gi,""))),document.head.appendChild(r),Promise.resolve(t.session_id)}catch(e){return Promise.reject(e)}})();return c.setDeviceProfile(t),Promise.resolve()}catch(e){return console.warn("MercadoPago.js - DeviceProfile could not be loaded",e),jn.sendError({type:jn.TRACK_TYPE_EVENT,eventData:{type:jn.ERROR_TYPE_WARNING,origin:"Core.setupDeviceProfile",reason:"DeviceProfile could not be loaded"}}),Promise.resolve()}})),c.setInstanceId(v()),ps(vs,this).call(this,e),ps(Es,this).call(this,t),us(ms,this,ps(Ts,this).call(this,t)),us(ws,this,new Yt),us(bs,this,!1),t.siteId&&c.setSiteId(t.siteId),c.setPublicKey(e),c.setLocale(ps(ms,this).locale),c.setIframeEnabled(!1),c.setTrackingDisabled(ps(ms,this).trackingDisabled),c.setFrontendStack(ps(ms,this).frontEndStack),c.setProductId(zr()),us(fs,this,ps(_s,this).call(this)),ps(Cs,this).call(this,"",{success:!0,frontEndStack:c.getFrontendStack()}),ps(Ms,this).call(this)}async getIdentificationTypes(){return await ps(fs,this),await ps(Ps,this).call(this,"/identification_types"),ps(gs,this).getIdentificationTypes()}async getPaymentMethods(e){return await ps(fs,this),await ps(Ps,this).call(this,"/payment_methods"),ps(gs,this).getPaymentMethods(e)}async getAccountPaymentMethods(e){return await ps(fs,this),ps(gs,this).getAccountPaymentMethods(e)}async getCardId(e,t){return await ps(fs,this),ps(gs,this).getCardId(e,t)}async updatePseudotoken(e,t,r){return await ps(fs,this),ps(gs,this).updatePseudotoken(e,t,r)}async getIssuers(e){return await ps(fs,this),await ps(Ps,this).call(this,"/issuers"),ps(gs,this).getIssuers(e)}async getInstallments(e){return await ps(fs,this),await ps(Ps,this).call(this,"/installments"),ps(gs,this).getInstallments(e)}async createCardToken(e,t){return await ps(fs,this),await ps(Ps,this).call(this,"/create_card_token"),ps(gs,this).createCardToken(e,t)}async updateCardToken(e,t){return await ps(fs,this),await ps(Ps,this).call(this,"/update_card_token"),ps(gs,this).updateCardToken(e,t)}getDocumentValidator(e,t,r){return function(e,t,r){switch(e){case"CPF":return new pa;case"CNPJ":return new ua;case"CI":return new da;case"RUT":return new Ma;case"Otro":if(!t||!r){const e="Invalid value of minLength or maxLength for other validator";throw Ra(e),new Error(e)}return new Pa(t,r);default:if(!t||!r){const e="Invalid value of minLength or maxLength for general validator";throw Ra(e),new Error(e)}return new ba(t,r)}}(e,t,r)}getSDKInstanceId(){return c.getInstanceId()}formatTokenOptions(e){return"object"!=typeof e?{productId:e,group:zt}:e}bricks(e){return new $o(e,this)}async authenticator(e,t,r){return await ps(fs,this),as.create(e,t,this.bricks({}),r)}cardForm(e){return ps(Cs,this).call(this,"/card_form",{is_iframe:Boolean(e.iframe)}),new $r(e,ps(fs,this))}checkout(e){return ps(Cs,this).call(this,"/cho_pro",{preference_id:e.preference?.id||""}),new no(e,ps(fs,this))}tokenizer(e){return ps(Cs,this).call(this,"/tokenizer"),new aa(e)}yape(e){return ps(Cs,this).call(this,"/yape"),new Xo(e)}fintoc(e){return ps(Cs,this).call(this,"/fintoc"),new ja(e)}}
await is only valid in async functions and the top level bodies of modules