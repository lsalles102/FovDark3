
// ===== MERCADOPAGO INITIALIZATION =====
(function() {
    'use strict';
    
    console.log('üîß Inicializando m√≥dulo MercadoPago...');

    // Estado global do MercadoPago
    window.mercadoPagoState = {
        isLoaded: false,
        isInitialized: false,
        instance: null,
        publicKey: null
    };

    // Fun√ß√£o para verificar se MercadoPago est√° dispon√≠vel
    window.isMercadoPagoAvailable = function() {
        return window.mercadoPagoState.isLoaded && 
               window.mercadoPagoState.isInitialized && 
               window.mercadoPagoState.instance !== null;
    };

    // Fun√ß√£o para obter a inst√¢ncia do MercadoPago
    window.getMercadoPagoInstance = function() {
        return window.mercadoPagoState.instance;
    };

    // Fun√ß√£o para inicializar MercadoPago
    window.initializeMercadoPago = function() {
        return new Promise(function(resolve, reject) {
            console.log('üöÄ Iniciando inicializa√ß√£o do MercadoPago...');

            // Verificar se j√° est√° inicializado
            if (window.mercadoPagoState.isInitialized && window.mercadoPagoState.instance) {
                console.log('‚úÖ MercadoPago j√° inicializado');
                resolve(window.mercadoPagoState.instance);
                return;
            }

            // Verificar se o SDK est√° carregado
            if (typeof MercadoPago === 'undefined' || !MercadoPago) {
                console.log('‚è≥ SDK do MercadoPago n√£o carregado ainda, aguardando...');
                
                // Aguardar at√© 10 segundos pelo SDK
                var attempts = 0;
                var maxAttempts = 50; // 50 x 200ms = 10 segundos
                
                var checkInterval = setInterval(function() {
                    attempts++;
                    
                    if (typeof MercadoPago !== 'undefined' && MercadoPago) {
                        clearInterval(checkInterval);
                        console.log('‚úÖ SDK do MercadoPago detectado ap√≥s ' + (attempts * 200) + 'ms');
                        initializeMercadoPagoInstance(resolve, reject);
                    } else if (attempts >= maxAttempts) {
                        clearInterval(checkInterval);
                        console.error('‚ùå Timeout: SDK do MercadoPago n√£o carregou ap√≥s 10 segundos');
                        reject(new Error('SDK do MercadoPago n√£o carregou - verifique CSP e conectividade'));
                    } else if (attempts % 15 === 0) {
                        console.log('‚è≥ Ainda aguardando MercadoPago... tentativa ' + attempts + '/' + maxAttempts);
                    }
                }, 200);
            } else {
                // SDK j√° carregado, inicializar imediatamente
                console.log('‚úÖ SDK do MercadoPago j√° dispon√≠vel');
                initializeMercadoPagoInstance(resolve, reject);
            }
        });
    };

    // Fun√ß√£o interna para inicializar a inst√¢ncia
    function initializeMercadoPagoInstance(resolve, reject) {
        try {
            console.log('üîß Criando inst√¢ncia do MercadoPago...');

            // Verifica√ß√£o robusta se MercadoPago est√° dispon√≠vel
            if (typeof MercadoPago === 'undefined' || !MercadoPago || typeof MercadoPago !== 'function') {
                console.error('‚ùå MercadoPago n√£o est√° dispon√≠vel no momento da inicializa√ß√£o');
                console.error('‚ùå Tipo detectado:', typeof MercadoPago);
                console.error('‚ùå Valor:', MercadoPago);
                reject(new Error('MercadoPago SDK n√£o dispon√≠vel'));
                return;
            }

            console.log('‚úÖ MercadoPago SDK confirmado como dispon√≠vel:', typeof MercadoPago);

            // Obter chave p√∫blica do backend
            fetch('/api/mercadopago/public-key')
                .then(function(response) {
                    if (!response.ok) {
                        throw new Error('Falha ao obter chave p√∫blica: ' + response.status);
                    }
                    return response.json();
                })
                .then(function(data) {
                    if (!data.public_key) {
                        throw new Error('Chave p√∫blica n√£o encontrada na resposta');
                    }

                    console.log('üîë Chave p√∫blica obtida:', data.public_key.substring(0, 20) + '...');

                    try {
                        // Criar inst√¢ncia do MercadoPago com configura√ß√£o mais robusta
                        var mp = new MercadoPago(data.public_key, {
                            locale: 'pt-BR',
                            advancedFraudPrevention: false // Desabilitar para evitar erros de configura√ß√£o
                        });

                        // Aguardar um momento para garantir que a inst√¢ncia foi criada
                        setTimeout(function() {
                            // Atualizar estado global
                            window.mercadoPagoState.isLoaded = true;
                            window.mercadoPagoState.isInitialized = true;
                            window.mercadoPagoState.instance = mp;
                            window.mercadoPagoState.publicKey = data.public_key;

                            console.log('‚úÖ MercadoPago inicializado com sucesso');
                            console.log('üìä Estado:', window.mercadoPagoState);

                            resolve(mp);
                        }, 100);

                    } catch (mpError) {
                        console.error('‚ùå Erro ao criar inst√¢ncia MercadoPago:', mpError);
                        throw mpError;
                    }
                })
                .catch(function(error) {
                    console.error('‚ùå Erro ao obter chave p√∫blica:', error);
                    
                    // Tentar com chave de teste como fallback apenas se n√£o for erro de SDK
                    if (typeof MercadoPago !== 'undefined' && MercadoPago) {
                        console.log('üîÑ Tentando inicializar com configura√ß√£o de fallback...');
                        
                        try {
                            var mp = new MercadoPago('TEST-c8c68306-c9a2-4ec8-98db-0b00ad3c6dd9', {
                                locale: 'pt-BR',
                                advancedFraudPrevention: false
                            });

                            setTimeout(function() {
                                window.mercadoPagoState.isLoaded = true;
                                window.mercadoPagoState.isInitialized = true;
                                window.mercadoPagoState.instance = mp;
                                window.mercadoPagoState.publicKey = 'TEST-FALLBACK';

                                console.log('‚ö†Ô∏è MercadoPago inicializado com chave de fallback');
                                resolve(mp);
                            }, 100);
                        } catch (fallbackError) {
                            console.error('‚ùå Erro no fallback:', fallbackError);
                            reject(fallbackError);
                        }
                    } else {
                        console.error('‚ùå SDK n√£o dispon√≠vel para fallback');
                        reject(error);
                    }
                });
        } catch (error) {
            console.error('‚ùå Erro na inicializa√ß√£o do MercadoPago:', error);
            reject(error);
        }
    }

    // Flag para evitar m√∫ltiplas inicializa√ß√µes
    var autoInitAttempted = false;

    // Inicializar automaticamente quando o DOM estiver pronto
    function autoInitialize() {
        if (autoInitAttempted) {
            console.log('üîÑ Auto-inicializa√ß√£o j√° tentada, pulando...');
            return;
        }
        
        autoInitAttempted = true;
        console.log('üéØ Auto-inicializando MercadoPago...');
        
        window.initializeMercadoPago()
            .then(function(mp) {
                console.log('üéâ MercadoPago auto-inicializado com sucesso');
                
                // Disparar evento personalizado
                var event = new CustomEvent('mercadoPagoReady', {
                    detail: { instance: mp }
                });
                window.dispatchEvent(event);
            })
            .catch(function(error) {
                console.error('‚ùå Erro na auto-inicializa√ß√£o:', error);
                autoInitAttempted = false; // Permitir nova tentativa em caso de erro
                
                // Disparar evento de erro
                var event = new CustomEvent('mercadoPagoError', {
                    detail: { error: error }
                });
                window.dispatchEvent(event);
            });
    }

    // Listener espec√≠fico para quando o SDK do MercadoPago √© carregado
    window.addEventListener('mercadoPagoSDKLoaded', function() {
        console.log('üéØ SDK do MercadoPago carregado - iniciando auto-inicializa√ß√£o...');
        if (!autoInitAttempted) {
            autoInitialize();
        }
    });

    // Event listeners para diferentes estados de carregamento
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', function() {
            // Aguardar um pouco para garantir que o SDK foi carregado
            setTimeout(function() {
                if (typeof MercadoPago !== 'undefined' && !autoInitAttempted) {
                    autoInitialize();
                }
            }, 100);
        });
    } else if (document.readyState === 'interactive' || document.readyState === 'complete') {
        // DOM j√° carregado, verificar se SDK est√° dispon√≠vel
        if (typeof MercadoPago !== 'undefined') {
            setTimeout(autoInitialize, 100);
        } else {
            // Aguardar SDK carregar
            setTimeout(function() {
                if (typeof MercadoPago !== 'undefined' && !autoInitAttempted) {
                    autoInitialize();
                }
            }, 1000);
        }
    }

    // Listener para quando a p√°gina √© totalmente carregada (fallback)
    window.addEventListener('load', function() {
        if (!window.mercadoPagoState.isInitialized && !autoInitAttempted) {
            console.log('üîÑ P√°gina carregada, verificando MercadoPago...');
            if (typeof MercadoPago !== 'undefined') {
                autoInitialize();
            } else {
                console.error('‚ùå MercadoPago ainda n√£o dispon√≠vel ap√≥s page load');
            }
        }
    });

    // Fun√ß√£o de debugging
    window.debugMercadoPago = function() {
        console.log('üêõ Debug MercadoPago:');
        console.log('- SDK dispon√≠vel:', typeof MercadoPago !== 'undefined');
        console.log('- Estado:', window.mercadoPagoState);
        console.log('- Fun√ß√£o dispon√≠vel:', typeof window.initializeMercadoPago === 'function');
        console.log('- Inst√¢ncia:', window.mercadoPagoState.instance);
    };

    console.log('‚úÖ M√≥dulo MercadoPago configurado');

})();
